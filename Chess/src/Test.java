import java.util.ArrayList;


public class Test {

	public static void main(String[] args) {
		
		long t1 = System.nanoTime();
//		int[] pos = {5,0,0,0,0,9,4,0,5,0,0,0,4,0,1,0,0,0,1,0,0,1,0,1,0,0,0,0,1,0,0,0,0,-1,0,0,-1,0,0,-1,-1,0,0,0,0,-1,-1,0,0,0,-4,-9,-3,0,0,0,-5,0,0,0,0,0,0,0,-5};
//		int[] pos = {5,3,0,0,5,4,9,0,1,4,0,1,8,1,1,1,0,1,1,0,0,0,0,0,0,0,0,0,-1,0,0,0,0,0,-1,0,0,0,0,0,0,0,-1,-8,-4,-3,0,0,-1,0,0,0,-4,-1,-1,-1,0,0,0,-5,-5,0,-9,0};
//		int[] pos = {0,0,9,5,0,0,0,5,1,1,1,0,0,0,1,1,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,-1,0,0,0,-1,0,8,0,-3,0,0,0,0,0,0,-3,-9,0,-1,-1,-5,0,0,-8,0,0,0,-5};
//		int[] pos = {0,0,0,8,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9,0,0,0};
//		int[] pos = {0,0,0,0,5,5,0,9,1,0,0,0,0,0,1,1,4,0,1,0,0,0,8,0,0,0,0,0,-4,1,3,0,-4,0,-1,0,0,-8,0,0,0,0,0,-5,0,0,0,0,-1,0,0,0,0,0,-1,-1,0,0,0,0,-5,0,-9,0};		
//		int[] pos = {3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-9};
//		int[] pos = {5,0,4,8,9,4,3,5,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,-1,0,0,-3,0,0,-1,0,0,0,0,0,-1,-1,0,-1,0,-1,-1,-1,-5,-3,-4,-8,-9,-4,0,-5};
		int[] pos = {5,3,4,8,9,4,3,5,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,-1,-1,-1,-1,-1,-1,-1,-5,-3,-4,-8,-9,-4,-3,-5};
		boolean[] roque = {true,true,true,true};
//		boolean[] roque = {false,false,false,false};
		Position p = new Position(pos, roque, true);

//		RootEngine R = new RootEngine(4);
//		i = R.AlphaBetaDesPrises(p, -10000, 10000);
//		System.out.println(i);
		//R.IterativeDeepening(p, 100);

		

		
		
		//////TESTS GUI
		
		GUI guigui = new GUI(p);
		
		//System.out.println(guigui.R.Nnoeuds);
		
		
		
		
	}
	
}


/* Nouvelle version du programme
  
|||||||||Temps[s]|||||Neval|||||||Ncouplegaux|||||CoupJoué
1:		rien 			12			  25		e4			
2:		rien 			185			383			e4
3:		3*rien			686			1500		d4
4:		1.00			11849		29062		Cc3
5:		2.95			47318		133303		f4	
6:		42				693757		2277108		e4
7:		166.5			2115007		8359868		e4
8:		4352			36435544	181983103	e4











  
  
 
 */